name: CI
on: 
  pull_request:
    branches:
      - main  # develop
jobs:
  # flutter_test:
  #   name: Flutter test and analyze
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout 
  #       uses: actions/checkout@v4
  #     - name: 'env file creation'
  #       run: |
  #         touch .env
  #         echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
  #         cat .env
  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: 21
  #         distribution: 'temurin'
  #     # - uses: actions/setup-java@v1
  #     #   with: 
  #     #     java-version: "12.x"
  #     # - name: install flutter
  #     #   uses: subosito/flutter-action@v2
  #     #   with: 
  #     #     channel: "stable"
  #     # version: 3.3.4
  #     - name: Setup Flutter SDK
  #       uses: flutter-actions/setup-flutter@v3
  #       with:
  #         channel: stable
  #         version: 3.3.4
  #     - name: Install dependencies
  #       run: flutter pub get
  #     - name: Analyze project source
  #       run: dart analyze # flutter analyze
  #     - name: Run tests
  #       run: flutter test      

  build_app:
    name: Flutter build app
    # needs: [flutter_test]
    runs-on: macos-latest # ubuntu-latest
    steps: 
      # 1 Clones the project on the machine
      - name: checkout 
        uses: actions/checkout@v4
      - name: env file creation
        run: |
          touch .env
          echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
          cat .env
      # 3 configure java for building
      - uses: actions/setup-java@v1
        with: 
          java-version: "12.x"
      # - uses: actions/setup-java@v4
      #   with: 
      #     java-version: "21"
      #     distribution: 'temurin'
      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@v3

      # - name: Setup Flutter SDK
      #   uses: flutter-actions/setup-flutter@v3
      #   with:
      #     channel: stable
      #     version: 3.3.4
      # 4 Installs flutter and related dependency on this machine
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with: 
          channel: "stable"
          # version: 3.3.4      
      # - run: flutter clean
      # 5 Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get
      # 6 Verifies if the dart code is formatted well
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .     
        # --set-exit-if-changed stops execution if the any code is not well formatted
        # --output=none prints files which needs to be formatted
      # 7 Checks for Semantic errors. Can be configured using analysis_options.yaml
      - name: Analyze project source
        run: flutter analyze --fatal-warnings        
      # 8 Runs unit test
      - name: Run tests
        run: flutter test
      # For android ............................................................
      # 9 Create android apk
      - run: flutter build apk --release 
      # 10 Create android apk
      - run: flutter build appbundle --release 
      # - run: flutter build apk --release -split-per-abi   
      # - name: publish (to releases)
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/debug/*.apk"
      #     token: ${{ secrets.TOKEN }}

      # - name: relase create / github-releases (android)
      #   uses: ncipollo/release-action@v1
      #   with: 
      #     artifacts: "build/app/outputs/bundle/release/*.aab"
      #     tag: v0.0.1 # ${{ github.sha }}
      #     token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
      #     allowUpdates: true
      - name: archive artifact (to github_releases, aab)
        uses: actions/upload-artifact@master
        with: 
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab
      # For ios ............................................................
      - run: flutter build ipa --release --no-codesign # codesigning instructions at: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html 
      - name: compress archives
        run: |
          cd build
          tar -czf ios_build.tar.gz ios
      # - name: relase create / github-releases (ios)
      #   uses: ncipollo/release-action@v1
      #   with: 
      #     artifacts: "build/ios/iphoneos/*.app"
      #     tag: v0.0.1 # ${{ github.sha }}
      #     token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
      #     allowUpdates: true      
      # - run: flutter build ios --release --no-codesign # codesigning instructions at: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html 
      # - name: relase create / github-releases (ios)
      #   uses: ncipollo/release-action@v1
      #   with: 
      #     artifacts: "build/ios/iphoneos/*.app"
      #     tag: v0.0.1 # ${{ github.sha }}
      #     token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
      #     allowUpdates: true
      # - name: archive artifact (to github_releases, iPA) 
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: ios-build
      #     path: build/ios/iphoneos/Runner.app
      - name: archive artifact (to github_releases, iPA) 
        uses: actions/upload-artifact@master
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
            build/ios/iphoneos/Runner.app
            build/ios_build.tar.gz
      - name: relase create / github-releases (android)
        uses: ncipollo/release-action@v1
        with: 
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab,build/ios/iphoneos/Runner.app,build/ios_build.tar.gz"
          tag: v0.0.1 # ${{ github.sha }}
          token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
          allowUpdates: true

  # build_ios:
  #   name: Flutter build (iOS)
  #   # needs: [flutter_test]
  #   runs-on: macos-latest
  #   steps: 
  #     # Clones the project on the machine
  #     - name: checkout 
  #       uses: actions/checkout@v4
  #     - name: 'env file creation'
  #       run: |
  #         touch .env
  #         echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
  #         cat .env
  #     # configure java for building
  #     - uses: actions/setup-java@v3
  #       with: 
  #         java-version: '17'
  #         distribution: 'temurin'
  #     # Installs flutter and related dependency on this machine
  #     - name: Setup Flutter SDK
  #       uses: subosito/flutter-action@v2
  #       with: 
  #         channel: "stable"
  #     - run: flutter pub get
  #     - run: flutter test
  #     # - run: flutter clean
  #     - run: flutter build ios --release --no-codesign # codesigning instructions at: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html 
  #     - name: Upload iPA
  #       uses: actions/upload-artifact@master
  #       with:
  #         name: ios-build
  #         path: build/ios/iphoneos

  deploy_beta_android:
    name: Flutter publish to firebase (upload artifacts android)
    needs: [build_app]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      # - name: set up java
      #   uses: actions/setup-java@v3    
      #   with:
      #     java-version: '17'
      #     distribution: 'temurin'
      - name: set up java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      # - run: npm install -g firebase-tools
      - uses: w9jds/setup-firebase@main
        with:
          tools-version: 13.8.2
          firebase_token: ${{ secrets.FIREBASE_TOKEN }}          
      - name: download artifact from github_releases
        uses: actions/download-artifact@master
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab
      - name: Upload artifact to Firebase App Distribution
        uses: mastersam07/firebase-app-distribution-action@v0.1 # (other alternatives: w9jds/firebase-action@master, wzieba/Firebase-Distribution-Github-Action@v1.0.0)
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          file: app-release.apk        
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'
      - name: upload artifact to Firebase App Distribution (2)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_PROJECT_ID}}
          file: build/app/outputs/bundle/release/app-release.aab
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'
  deploy_beta_ios:
    name: Flutter publish to firebase (upload artifacts iOS)
    needs: [build_app]
    runs-on: ubuntu-latest
    steps:
      - name: set up java
        uses: actions/setup-java@v3    
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - uses: w9jds/setup-firebase@main
        with:
          tools-version: 13.8.2
          firebase_token: ${{ secrets.FIREBASE_TOKEN }}             
      - name: download artifact from github_releases
        uses: actions/download-artifact@master
        with:
          name: ios-build
      # - name: Upload IPA
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{secrets.FIREBASE_IOS_APPID}}
      #     token: ${{secrets.FIREBASE_TOKEN}}
      #     group: testers
      #     file: Runner.ipa   
      - name: Upload IPA
        uses: mastersam07/firebase-app-distribution-action@v0.1 # (other alternatives: w9jds/firebase-action@master, wzieba/Firebase-Distribution-Github-Action@v1.0.0)
        with:
          appId: ${{secrets.FIREBASE_IOS_APPID}}
          file: Runner.ipa        
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'
          
          