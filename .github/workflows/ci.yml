name: CI
on: 
  pull_request:
    branches:
      - main
jobs:
  flutter_test:
    name: Run flutter test and analyze
    runs-on: ubuntu-latest
    steps:
      - name: checkout 
        uses: actions/checkout@v2
      - name: 'env file creation'
        run: |
          touch .env
          echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
          cat .env
      - uses: actions/setup-java@v1
        with: 
          java-version: "12.x"
      - name: install flutter
        uses: subosito/flutter-action@v1
        with: 
          channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
  build_ios:
    name: Build Flutter (iOS)
    needs: [flutter_test]
    runs-on: macos-latest
    steps: 
      - name: checkout 
        uses: actions/checkout@v2
      - name: 'env file creation'
        run: |
          touch .env
          echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
          cat .env
      - uses: actions/setup-java@v1
        with: 
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with: 
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ios --no-codesign # --release codesigning instructions at: https://developer.apple.com/library/content/documentation/IDEs/Conceptual/AppDistributionGuide/MaintainingCertificates/MaintainingCertificates.html 
      - name: Upload iPA
        uses: actions/upload-artifact@master
        with:
          name: ios-build
          path: build/ios/iphoneos
  build_android:
    name: Build Flutter (android)
    needs: [flutter_test]
    runs-on: ubuntu-latest
    steps: 
      - name: checkout 
        uses: actions/checkout@v2
      - name: 'env file creation'
        run: |
          touch .env
          echo "MY_VARIABLE=http://autogenerated-value.ci:9000" >> .env
          cat .env
      - uses: actions/setup-java@v1
        with: 
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with: 
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle   
      # - name: publish (to releases)
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "build/app/outputs/apk/debug/*.apk"
      #     token: ${{ secrets.TOKEN }}
      - name: archive artifact (to github_releases)
        uses: actions/upload-artifact@master
        with: 
          name: apk-build
          path: build/app/outputs/apk/release

  deploy_beta_android:
    name: Upload artifact to firebase (android)
    needs: [build_android]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1      
        with:
          java-version: 1.8        
      - name: download artifact from github_releases
        uses: actions/download-artifact@master
        with:
          name: apk-build
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app-release.apk        
  deploy_beta_ios:
    name: Upload artifact to firebase (iOS)
    needs: [build_ios]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: ios-build
      - name: Upload IPA
        uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
        with:
          appId: ${{secrets.FIREBASE_IOS_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          group: testers
          file: Runner.ipa          