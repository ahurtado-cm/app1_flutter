name: Flutter Build and Deploy
on: 
  workflow_call:
    inputs:
      strongline-api-tunneling-url:
        required: true
        type: string
      app-repository:
        required: true
        type: string
      app-repository-ref:
        required: true
        type: string
      working-directory:
        required: true
        type: string
      release-tag: 
        required: true        
        type: string
      release-repository: 
        required: true        
        type: string
    secrets:
      PERSONAL_RELEASE_TOKEN:
        required: true
      PERSONAL_CHECKOUT_TOKEN:
        required: true
defaults:
  run:
    shell: bash

jobs:

  build_app:
    name: Flutter build app
    # needs: [flutter_test]
    runs-on: macos-latest # ubuntu-latest
    permissions:
      contents: write    
    steps: 
      - uses: actions/checkout@v4
        with:
          path: garden
      - name: Trigger/Call Workflow flutter-app-deploy 
        uses: ./garden/.github/actions/flutter-app-deploy # ./.github/actions/flutter-app-deploy
        with: 
          strongline-api-tunneling-url: ${{inputs.strongline-api-tunneling-url}}
          PERSONAL_CHECKOUT_TOKEN: ${{ secrets.PERSONAL_CHECKOUT_TOKEN }}
          PERSONAL_RELEASE_TOKEN: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
          app-repository: ${{inputs.app-repository}} # "ahurtado-cm/app1_flutter"
          app-repository-ref: ${{inputs.app-repository-ref}}
          working-directory: ${{inputs.working-directory}} # "app1-flutter"
          release-tag: ${{inputs.release-tag}} # "v0.0.1"

  deploy_beta_android:
    name: Flutter publish to firebase (upload artifacts android)
    needs: [build_app]
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      
      - name: set up java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          # cache: 'yarn'          

      - run: npm install -g firebase-tools
      # - uses: w9jds/setup-firebase@main  #Alternative for firebase-action)
      #   with:
      #     tools-version: 13.8.2
      #     firebase_token: ${{ secrets.FIREBASE_TOKEN }}          

      - name: download artifact from github_releases
        uses: actions/download-artifact@master
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab
      - name: Upload artifact to Firebase App Distribution
        uses: mastersam07/firebase-app-distribution-action@v0.1 # (other alternatives: w9jds/firebase-action@master, wzieba/Firebase-Distribution-Github-Action@v1.0.0)
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          file: app-release.apk        
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'
      - name: upload artifact to Firebase App Distribution (2)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_PROJECT_ID}}
          file: build/app/outputs/bundle/release/app-release.aab
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'

      # - name: Deploy to Firebase
      #   uses: w9jds/firebase-action@master
      #   with:
      #     args: deploy --only hosting
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}          
  deploy_beta_ios:
    name: Flutter publish to firebase (upload artifacts iOS)
    needs: [build_app]
    runs-on: ubuntu-latest
    steps:
      - name: set up java
        uses: actions/setup-java@v3    
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          # cache: 'yarn'          
        
      - uses: w9jds/setup-firebase@main # alternative to firebase-action
        with:
          tools-version: 13.9.0
          firebase_token: ${{ secrets.FIREBASE_TOKEN }}             
      - name: download artifact from github_releases
        uses: actions/download-artifact@master
        with:
          name: ios-build
      # - name: Upload IPA
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{secrets.FIREBASE_IOS_APPID}}
      #     token: ${{secrets.FIREBASE_TOKEN}}
      #     group: testers
      #     file: Runner.ipa   
      - name: Upload IPA
        uses: mastersam07/firebase-app-distribution-action@v0.1 # (other alternatives: w9jds/firebase-action@master, wzieba/Firebase-Distribution-Github-Action@v1.0.0)
        with:
          appId: ${{secrets.FIREBASE_IOS_APPID}}
          file: Runner.ipa        
          # token: ${{secrets.FIREBASE_TOKEN}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: 'testers'
          
          